# Author: Constantine A. Murenin (cnst)		http://cnst.su/
#
# https://serverfault.com/questions/432636/detecting-slashdot-effect-in-nginx
#
#sh -c 'mkdir /tmp/slashdotted.nginx; nginx -s reload; for i in 1 2 3; do curl -H "Referer: test" localhost:2636; sleep 2; done; tail /var/log/nginx/access.log'
#
limit_req_zone $http_referer zone=slash:10m rate=1r/m;	# XXX: how many req/minute?
server {
	listen 2636;
	location / {
		limit_req zone=slash nodelay;
		#limit_req_status 429;	#nginx 1.3.15
		#error_page 429 = @dot;
		error_page 503 = @dot;
		proxy_pass http://localhost:2635;
		# an outright `return 200` has a higher precedence over the limit
	}
	recursive_error_pages on;
	location @dot {
		proxy_pass http://127.0.0.1:2637/?ref=$http_referer;
		# if you don't have `resolver`, no URI modification is allowed:
		#proxy_pass http://localhost:2637;
		proxy_intercept_errors on;
		error_page 429 = @slash;
	}
	location @slash {
		# XXX: placeholder for your content:
		return 200 "$uri: we're too fast!\n";
	}
}
server {
	listen 2635;
	# XXX: placeholder for your content:
	return 200 "$uri: going steady\n";
}
proxy_cache_path /tmp/slashdotted.nginx inactive=1h
		max_size=64m keys_zone=slashdotted:10m;
server {
	# we need to flip the 200 status into the one >=300, so that
	# we can then catch it through proxy_intercept_errors above
	listen 2637;
	error_page 429 @/.;
	return 429;
	location @/. {
		proxy_cache slashdotted;
		proxy_cache_valid 200 60s;	# XXX: how often to get notifications?
		proxy_pass http://localhost:2638;
	}
}
server {
	# IRL this would be an actual script, or
	# a proxy_pass redirect to an HTTP to SMS or SMTP gateway
	listen 2638;
	return 200 authorities_alerted\n;
}
